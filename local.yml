version: '3'

volumes:
  volume_gis_showdown_postgres: {}
  gis_showdown_local_postgres_data_backups: {}
  volume_mongodb: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: gis_showdown_local_django
    container_name: gis_showdown_local_django
    platform: linux/x86_64
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    image: timescale/timescaledb-ha:pg14-latest
    container_name: gis_showdown_local_postgres
    volumes:
      - volume_gis_showdown_postgres:/home/postgres/pgdata/data:Z
      - gis_showdown_local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  # postgres:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/postgres/Dockerfile
  #   image: gis_showdown_production_postgres
  #   container_name: gis_showdown_local_postgres
  #   volumes:
  #     - gis_showdown_local_postgres_data:/var/lib/postgresql/data:Z
  #     - gis_showdown_local_postgres_data_backups:/backups:z
  #   env_file:
  #     - ./.envs/.local/.postgres

  mongodb:
    image: mongo:5
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - volume_mongodb:/data/db

  # docs:
  #   image: gis_showdown_local_docs
  #   container_name: gis_showdown_local_docs
  #   platform: linux/x86_64
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/docs/Dockerfile
  #   env_file:
  #     - ./.envs/.local/.django
  #   volumes:
  #     - ./docs:/docs:z
  #     - ./config:/app/config:z
  #     - ./gis_showdown:/app/gis_showdown:z
  #   ports:
  #     - "9000:9000"
  #   command: /start-docs
